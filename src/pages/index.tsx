import { type NextPage } from "next";
import Head from "next/head";
import { EyeNoneIcon, EyeOpenIcon, EnvelopeClosedIcon, PersonIcon } from '@radix-ui/react-icons';
import Link from "next/link";
import { useState } from "react";
import axios from 'axios';


const Home: NextPage = () => {
  const [user, setUser] = useState({email: "", password: "", name: ""})
  const [eyeOff, setEyeOff] = useState(true)
  const [buttonLogin, setButtonLogin] = useState(true)
  const bgButton = `#484848`


  
  async function Cadastrar(e: { preventDefault: () => void; }){
    e.preventDefault();
    const url = '/api/user/signUp'
    const data = {
      email:user.email,
      password:user.password,
      name:user.name
    }
    try {
      const response = await axios.post(url,data);
      console.log(response.data);
    } catch (error) {
      console.error(error);
    }
  }

  async function Logar(e: { preventDefault: () => void; }){
    e.preventDefault();
    const url = '/api/user/signIn'
    const data = {
      email:user.email,
      password:user.password,
    }
    try {
      const response = await axios.post(url,data);
      if(response.data.message){
        alert(response.data.message)
      }
    } catch (error) {
      console.error(error);
    }
  }
  return (
    <>
      <Head>
        <title>YouWrite</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 mt-[50px]">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            You<span className="text-[hsl(280,100%,70%)]">Write</span> Login
          </h1>
          <div className="w-[500px] pb-[20px] flex flex-col items-center border-2 rounded-[20px]">
            <div className="flex justify-between w-[70%] mt-[20px]">
              <button onClick={() => setButtonLogin(true)} className={`bg-[${buttonLogin ? bgButton : "transparent"}] w-[150px] outline-none h-[40px] border-2 text-white flex justify-center items-center text-[20px] rounded-[5px]`}>
                Login
              </button>
              <button onClick={() => setButtonLogin(false)} className={`bg-[${buttonLogin ? "transparent" : bgButton }] w-[150px] outline-none h-[40px] border-2 text-white flex justify-center items-center text-[20px] rounded-[5px]`}>
                Cadastrar
              </button>
            </div>
            <form onSubmit={buttonLogin ? Logar : Cadastrar} className="flex flex-col mt-[20px] items-center">
              <fieldset  className="w-[400px] flex bg-white justify-between px-[5px] items-center  border-[2px] border-solid border-white bg-transparent rounded-[8px]">
                <legend className="text-[16px] text-white px-[5px]">Email</legend>
                <input onChange={(Text) => setUser({...user, email: Text.target.value})} required type="email" className="w-full text-[20px] outline-none bg-transparent text-white placeholder:text-white" placeholder="Digite seu email"></input>
                <EnvelopeClosedIcon fill="white" color="white" width={30} height={30} className="ml-[10px]"/>
              </fieldset>

              <fieldset className="w-[400px] flex bg-white mt-[10px] justify-between px-[5px] items-center  border-[2px] border-solid border-white bg-transparent rounded-[8px]">
                <legend className="text-[16px] text-white px-[5px]">Senha</legend>
                <input onChange={(Text) => setUser({...user, password: Text.target.value})} required type={eyeOff ? "password" : "text"} className="w-full text-[20px] outline-none bg-transparent text-white placeholder:text-white" placeholder="Digite sua senha"></input>
                {eyeOff ? <EyeNoneIcon onClick={() => setEyeOff(!eyeOff)} fill="white" color="white" width={30} height={30} className="ml-[10px]"/>
                  :
                <EyeOpenIcon onClick={() => setEyeOff(!eyeOff)} fill="white" color="white" width={30} height={30} className="ml-[10px]"/>}
              </fieldset>

              {buttonLogin ?
              <button type="submit" className="w-[150px] h-[40px] border-2 mt-[30px] rounded-[8px] text-white text-[20px]">Entrar</button>
              :
              <>
              <fieldset className="w-[400px] flex bg-white mt-[10px] justify-between px-[5px] items-center  border-[2px] border-solid border-white bg-transparent rounded-[8px]">
                <legend className="text-[16px] text-white px-[5px]">Nome</legend>
                <input onChange={(Text) => setUser({...user, name: Text.target.value})} required type="text" className="w-full text-[20px] outline-none bg-transparent text-white placeholder:text-white" placeholder="Digite sua senha"></input>
                <PersonIcon fill="white" color="white" width={30} height={30} className="ml-[10px]"/>
              </fieldset> 
              <button type="submit" className="w-[150px] h-[40px] border-2 mt-[30px] rounded-[8px] text-white text-[20px]">Cadastrar</button>
              </>}
              
            </form>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
